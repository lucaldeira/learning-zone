version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: my-local-psql
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: your_username
      POSTGRES_PASSWORD: your_password
      POSTGRES_DB: your_database
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./table/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      interval: 1s
      timeout: 5s
      test: [ CMD, pg_isready, -h, postgres, -U, your_username ]
      retries: 20

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    healthcheck:
      interval: 10s
      timeout: 10s
      test: [ "CMD", "nc", "-z", "zookeeper", "2181"]
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_HEAP_OPTS: "-Xms256m -Xmx256m"
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TOPIC_AUTO_CREATE: "true"
    healthcheck:
      interval: 10s
      timeout: 10s
      test: [ "CMD", "nc", "-z", "kafka", "29092"]
      retries: 5


volumes:
  postgres_data: null
